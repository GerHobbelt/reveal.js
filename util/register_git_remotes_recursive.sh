#! /bin/bash
# generated by collect_git_add_recursively.sh

pushd $(dirname $0)                                                             2> /dev/null   > /dev/null
cd ..

mode="d"

getopts ":fqh" opt
#echo opt+arg = "$opt$OPTARG"
case "$opt$OPTARG" in
f )
  echo "--- check out master/HEAD before registering all git remotes ---"
  for (( i=OPTIND; i > 1; i-- )) do
    shift
  done
  #echo args: $@
  mode="f"

  git submodule sync
  git submodule update --init
  git submodule update --init --recursive

  util/git_checkout_submodules_head.sh
  ;;

"?" )
  echo "--- set up git remotes only ---"
  ;;

q )
  echo "--- set up git remotes only ---"
  for (( i=OPTIND; i > 1; i-- )) do
    shift
  done
  #echo args: $@
  mode="q"
  ;;

* )
  cat <<EOT
$0 [-f] [-q] [submodule-paths]

set up git remotes for any / all submodules.

-f       : 'full featured', i.e. check out the preferred branch for each submodule
           and register all submodule remotes.
-q       : 'quick', i.e. only register all submodule remotes.
submodule-paths
         : when you specify one or more submodule directories, than only the
           remotes for those submodules will be set up.
           This is optional; the default sets up the remotes for ALL submodules.

EOT
  exit
  ;;
esac


submodule=xxxxxx

# args: (path, name, repo, argc, argv...)
function register_remote {
    argc=$#
    argv=("$@")
    path=$1
    name=$2
    repo=$3
    #echo register_remote [$path] [$name] [$repo] [$argc] [...]

    # only when paths have been specified on the commandline do we check whether the given remote should be registered
    # (apart from the separate check to see if the submodule has actually been installed, see further below)
    if test $argc -gt 4 ; then
        hit=0
        for ((i=4; i < $argc; i++)); do
            #echo testing dir $i: ${argv[$i]}
            if test ${argv[$i]} = $path ; then
                hit=1
                break
            fi
        done
    else
        hit=1
    fi

    if test $hit -ne 0 ; then
        if test -d $path && test -s $path/.git ; then
            if test $submodule != $path ; then
                echo -------------------------------------------------------------------------------------
                echo submodule:: $path
                submodule=$path
            fi
            pushd $path                                                         2> /dev/null   > /dev/null
            if test "$mode" = "f" ; then
                git remote rm $name
            fi
            git remote add $name $repo
            popd                                                                2> /dev/null   > /dev/null
        fi
    fi
}






register_remote lib/js/classList                                              local-original                           ../../../../classlist-shim/                                                      $# $@
register_remote lib/js/head                                                   local-original                           ../../../../headjs/                                                              $# $@
register_remote lib/js/require-domReady                                       local_original                           ../../../../require-domReady                                                     $# $@
register_remote lib/js/require-less                                           local_original                           ../../../../require-less                                                         $# $@
register_remote lib/js/require-plugins                                        local_original                           ../../../../require-plugins                                                      $# $@
register_remote lib/js/requireCSS                                             local_original                           ../../../../requireCSS                                                           $# $@
register_remote lib/js/requireJS                                              local_original                           ../../../../requireJS                                                            $# $@
register_remote lib/js/response.js                                            local-original                           ../../../../response.js/                                                         $# $@
register_remote lib/js/verge                                                  local-2-original                         ../../../../jquery-verge/                                                        $# $@
register_remote lib/js/verge                                                  local-original                           ../../../../verge-screendimensions/                                              $# $@
register_remote lib/plugins/SyntaxHighlighter                                 local-original                           ../../../../SyntaxHighlighter/                                                   $# $@
register_remote lib/plugins/highlight                                         local-lib                                ../../../../highlight/                                                           $# $@
register_remote lib/plugins/highlight                                         local-original                           ../../../../highlight/                                                           $# $@
register_remote lib/plugins/marked                                            local-original                           ../../../../marked/                                                              $# $@
register_remote lib/plugins/zoom                                              local-lib                                ../../../../zoom/                                                                $# $@
register_remote lib/plugins/zoom                                              local-original                           ../../../../zoom/                                                                $# $@



popd                                                                            2> /dev/null   > /dev/null

